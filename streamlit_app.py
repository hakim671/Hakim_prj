# —Ñ–∞–π–ª: app.py

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from prophet import Prophet
from sklearn.metrics import mean_squared_error
from math import sqrt

st.set_page_config(page_title="–ü—Ä–æ–≥–Ω–æ–∑ –∫—É—Ä—Å–∞ —Å–æ–º–æ–Ω–∏/–¥–æ–ª–ª–∞—Ä", layout="wide")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def load_data():
    # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π –ø—É—Ç—å –∫ –¥–∞–Ω–Ω—ã–º
    df = pd.read_csv('USD_TJS Historical Data (1).csv') 
    df['Date'] = pd.to_datetime(df['Date'])
    return df

# –§—É–Ω–∫—Ü–∏—è RMSE
def rmse(y_actual, y_predicted):
    return sqrt(mean_squared_error(y_actual, y_predicted))

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥
df = load_data()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Prophet
df_prophet = df[['Date', 'Price']].rename(columns={'Date': 'ds', 'Price': 'y'})

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ train –∏ val
w_hours = 120
train_pr = df_prophet.iloc[w_hours:]
val_pr = df_prophet.iloc[:w_hours]

# –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
model = Prophet(daily_seasonality=False, yearly_seasonality=False, changepoint_prior_scale=0.001, n_changepoints=7)
model.fit(train_pr)

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞
future = model.make_future_dataframe(periods=w_hours, freq='D', include_history=False)
forecast = model.predict(future)

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
val_actual = val_pr['y'].values
val_pred = forecast['yhat'].values
model_rmse = rmse(val_actual, val_pred)

st.sidebar.title("–ú–µ–Ω—é")
page = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É", ["üìà –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –º–æ–¥–µ–ª–∏", "üîÆ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ"])

if page == "üìà –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –º–æ–¥–µ–ª–∏":
    st.title("üìà –ü—Ä–æ–≥–Ω–æ–∑ –∫—É—Ä—Å–∞ —Å–æ–º–æ–Ω–∏/–¥–æ–ª–ª–∞—Ä")
    st.write("""
    - **–î–∞—Ç–∞—Å–µ—Ç:** 
            - **–ò—Å—Ç–æ—á–Ω–∏–∫:** investing.com
            - **–î–ª–∏–Ω–∞:** 1339
            - **–î–∞—Ç–∞:** –æ—Ç 2020 –¥–æ 2025
            """)
    st.write("""
    –ú–æ–¥–µ–ª—å –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ **Prophet** –æ—Ç Facebook.
    
    - **–¢–∏–ø –º–æ–¥–µ–ª–∏:** –í—Ä–µ–º–µ–Ω–Ω–æ–π —Ä—è–¥, Prophet(Facebook)
    - **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:** –ë–µ–∑ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏, 7 —Ç–æ—á–µ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç—Ä–µ–Ω–¥–∞
    - **–ú–µ—Ç—Ä–∏–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞:** RMSE
    """)

    st.metric(label="RMSE –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏", value=f"{model_rmse:.2f}")

    st.subheader("–ì—Ä–∞—Ñ–∏–∫ –Ω–∞—Å—Ç–æ—è—â–∏—Ö —Ü–µ–Ω")
    fig, ax = plt.subplots()
    ax.plot(df['Date'], df['Price'], label='–†–µ–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã')
    ax.set_xlabel('–î–∞—Ç–∞')
    ax.set_ylabel('–ö—É—Ä—Å —Å–æ–º–æ–Ω–∏/–¥–æ–ª–ª–∞—Ä')
    ax.legend()
    st.pyplot(fig)

elif page == "üîÆ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ":
    model = Prophet(daily_seasonality=False, yearly_seasonality=False, changepoint_prior_scale=0.001, n_changepoints=7)
    model.fit(df_prophet)

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞
    future = model.make_future_dataframe(periods=w_hours, freq='D', include_history=False)
    forecast = model.predict(future)
    st.title("üîÆ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞ —Å–æ–º–æ–Ω–∏/–¥–æ–ª–ª–∞—Ä")

    st.write("–ú–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∫—É—Ä—Å –Ω–∞ 120 –¥–Ω–µ–π –≤–ø–µ—Ä–µ–¥.")

    st.subheader("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞")

    # –ü–æ–ª–∑—É–Ω–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–Ω—è
    day_selected = st.slider("–î–µ–Ω—å –ø—Ä–æ–≥–Ω–æ–∑–∞", min_value=1, max_value=w_hours, value=1)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
    selected_forecast = forecast.iloc[day_selected - 1]  # -1, –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å –Ω—É–ª—è

    st.write(f"### –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –¥–µ–Ω—å {day_selected}:")
    st.metric(label="–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π –∫—É—Ä—Å", value=f"{selected_forecast['yhat']:.4f} —Å–æ–º–æ–Ω–∏")
    st.caption(f"–î–∏–∞–ø–∞–∑–æ–Ω –æ—Ç {selected_forecast['yhat_lower']:.4f} –¥–æ {selected_forecast['yhat_upper']:.4f} —Å–æ–º–æ–Ω–∏")

    st.subheader("–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–≥–Ω–æ–∑–∞")
    fig2 = model.plot(forecast)
    st.pyplot(fig2)

    st.subheader("–¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞")
    st.dataframe(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].rename(columns={
        'ds': '–î–∞—Ç–∞',
        'yhat': '–ü—Ä–æ–≥–Ω–æ–∑',
        'yhat_lower': '–ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞',
        'yhat_upper': '–í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞'
    }))

